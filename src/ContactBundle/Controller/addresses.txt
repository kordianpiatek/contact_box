/**
     * @Route("/{id}/address_modify" , name="address_modify" , methods={"GET"}
     */
    public function addressModifyGetAction($id)
    {
        $person = $this->getDoctrine()->getRepository(Person::class)->findOneBy(['id' => $id]);
        $address = new Address();

        $addressForm = $this->createFormBuilder($address)
            ->setMethod('POST')
            ->add('city',TextType::class)
            ->add('street', TextType::class)
            ->add('houseNumber', NumberType::class)
            ->add('apartamentNumber', NumberType::class)
            ->add('save', SubmitType::class, ['attr' => ['class' => 'button']])
            ->getForm();

        return $this->render('contact/address_edit.html.twig', array('addressForm' => $addressForm->createView()));
    }

    /**
     * @Route("/{id}/email_modify" , name="email_modify" , methods={"GET"}
     */
    public function emailModifyGetAction($id)
    {
        $person = $this->getDoctrine()->getRepository(Person::class)->findOneBy(['id' => $id]);
        $email = new Email();

        $emailForm = $this->createFormBuilder($email)
            ->setMethod('POST')
            ->add('emailAddress',TextType::class)
            ->add('type', TextType::class)
            ->add('save', SubmitType::class, [ 'attr' => ['class' => 'button']])
            ->getForm();

        return $this->render('contact/email_edit.html.twig', array('emailForm' => $emailForm->createView()));
    }

    /**
     * @Route("/{id}/phone_modify" ,name="phone_modify" , methods={"GET"}
     */
    public function phoneModifyGetAction($id)
    {
        $person = $this->getDoctrine()->getRepository(Person::class)->findOneBy(['id' => $id]);
        $phoneNumber = new PhoneNumber();

        $phoneNumberForm = $this->createFormBuilder($phoneNumber)
            ->setMethod('POST')
            ->add('number', NumberType::class)
            ->add('type', TextType::class)
            ->add('save', SubmitType::class, ['attr' => ['class' => 'button']])
            ->getForm();

        return $this->render('contact/phone_edit.html.twig', array('phoneNumberForm' => $phoneNumberForm->createView()));
    }

    ////////////////////////////////////
    $addressForm = $this->createFormBuilder($address)
                ->setMethod('POST')
                ->add('city',TextType::class)
                ->add('street', TextType::class)
                ->add('houseNumber', NumberType::class)
                ->add('apartamentNumber', NumberType::class)
                ->add('save', SubmitType::class, ['attr' => ['class' => 'button']])
                ->getForm();
            $emailForm = $this->createFormBuilder($email)
                ->setMethod('POST')
                ->add('emailAddress',TextType::class)
                ->add('type', TextType::class)
                ->add('save', SubmitType::class, [ 'attr' => ['class' => 'button']])
                ->getForm();
            $phoneNumberForm = $this->createFormBuilder($phoneNumber)
                ->setMethod('POST')
                ->add('number', NumberType::class)
                ->add('type', TextType::class)
                ->add('save', SubmitType::class, ['attr' => ['class' => 'button']])
                ->getForm();

            $addressForm->handleRequest($request);
                    if ($addressForm->isSubmitted() and $addressForm->isValid()) {
                        $address->setPerson($person->getId());
                        $address = $addressForm->getData();
                        $em = $this->getDoctrine()->getManager();
                        $em->persist($address);
                        $em->persist($person);
                        $em->flush();
                        return $this->redirectToRoute('profile', ['id' => $address->getId(),
                            'address'=> $address
                        ]);
                    }

                    $emailForm->handleRequest($request);
                    if ($emailForm->isSubmitted() and $emailForm->isValid()) {
                        $person = $emailForm->getData();
                        $em = $this->getDoctrine()->getManager();
                        $em->persist($person);
                        $em->flush();
                        return $this->redirectToRoute('profile', ['id' => $email->getId(),
                            'email' => $email
                        ]);
                    }

                    $phoneNumberForm->handleRequest($request);
                    if ($phoneNumberForm->isSubmitted() and $phoneNumberForm->isValid()) {
                        $person = $phoneNumberForm->getData();
                        $em = $this->getDoctrine()->getManager();
                        $em->persist($person);
                        $em->flush();
                        return $this->redirectToRoute('profile', ['id' => $phoneNumber->getId(),
                            'phoneNumber' => $phoneNumber
                        ]);
                    }